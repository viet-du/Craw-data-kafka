import os
import json,cv2,requests
import requests
import random
import time
import numpy as np
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from urllib.parse import urljoin
import time, random
from selenium import webdriver
from selenium.webdriver.common.by import By
#th√™m kafka
from kafka_client import get_producer
import cv2, requests, numpy as np

producer = get_producer()

# v√≠ d·ª• sau khi crawl ƒë∆∞·ª£c ·∫£nh
filename = "images-cellphone/product_1.jpg"
message = {
    "id": 1,
    "file_path": filename,
    "url": "https://example.com/image1.jpg",
    "width": 640,
    "height": 480
}

producer.send("cellphone-topic", value=message)
print(f"ƒê√£ g·ª≠i v√†o Kafka: {message}")


#=========ƒê∆∞·ªùng d·∫´n trang wed==========
driverpath = r"D:\chromedriver-win64\chromedriver.exe"
service = Service(driverpath)
driver = webdriver.Chrome(service=service)
#==========links========================
driver.get("https://cellphones.com.vn/mobile/dien-thoai-pin-trau.html")
time.sleep(random.randint(5, 10))
#Craw th√¥ng tin
# t·∫°o th∆∞ m·ª•c l∆∞u ·∫£nh
os.makedirs("images-cellphone", exist_ok=True)
#t√™n sp
elems = WebDriverWait(driver, 10).until(
    EC.presence_of_all_elements_located((By.CSS_SELECTOR, ".product__name"))
)
elems=driver.find_elements(By.CSS_SELECTOR,".product__name")
title_all = [elem.text for elem in elems]
elems=driver.find_elements(By.CSS_SELECTOR,"[href]")
links_all = [elem.get_attribute("href") for elem in elems]
#gi√°
#gi√°
try:
    # L·∫•y gi√° ƒë√£ gi·∫£m
    try:
        prices_show = driver.find_elements(By.CSS_SELECTOR, ".product__price--show")
        prices_through = driver.find_elements(By.CSS_SELECTOR, ".product__price--through")

        all_price1 = [elem.text for elem in prices_show]
        all_price2 = [elem.text for elem in prices_through]

        for show, through in zip(all_price1, all_price2):
            print(f"Gi√° ƒë√£ gi·∫£m: {show} | Gi√° g·ªëc: {through}")
    except Exception as e:
        print(" Kh√¥ng th·ªÉ l·∫•y gi√°:", e)

    # L·∫•y badge (ƒë·∫∑c ƒëi·ªÉm)
    try:
        elems = driver.find_elements(By.CSS_SELECTOR, ".product__badge")
        product = [elem.text for elem in elems]
        print("Badge:", product)
    except Exception as e:
        print(" Kh√¥ng th·ªÉ l·∫•y badge:", e)

    # L·∫•y ph·∫ßn trƒÉm gi·∫£m gi√°
    try:
        elems = driver.find_elements(By.CSS_SELECTOR, ".product__price--percent-detail")
        discount_all = [elem.text for elem in elems]
        print("Gi·∫£m gi√°:", discount_all)
    except Exception as e:
        print(" Kh√¥ng t√¨m th·∫•y ph·∫ßn trƒÉm gi·∫£m gi√°:", e)

except Exception as e:
    print(" L·ªói t·ªïng th·ªÉ:", e)

# l·∫•y danh s√°ch th·∫ª img
# t·∫°o th∆∞ m·ª•c l∆∞u ·∫£nh
os.makedirs("images-cellphone", exist_ok=True)
images = driver.find_elements(By.CSS_SELECTOR, ".product__img")
img_links = [img.get_attribute("src") for img in images]

for idx, link in enumerate(img_links, start=1):
    try:
        response = requests.get(link, timeout=10)
        if response.status_code == 200:
            img_array = np.asarray(bytearray(response.content), dtype=np.uint8)
            img = cv2.imdecode(img_array, cv2.IMREAD_COLOR)

            if img is not None:
                filename = f"images-cellphone/product_{idx}.jpg"  # üëà s·ª≠a ch·ªó n√†y
                cv2.imwrite(filename, img)
                print(f" ƒê√£ l∆∞u: {filename} ({img.shape[1]}x{img.shape[0]})")
            else:
                print(f" Kh√¥ng ƒë·ªçc ƒë∆∞·ª£c ·∫£nh {idx} t·ª´ link: {link}")
        else:
            print(f" L·ªói HTTP {response.status_code} khi t·∫£i ·∫£nh {idx}")
    except Exception as e:
        print(f"L·ªói khi t·∫£i ·∫£nh {idx}: {e}")
# ================= L∆∞u JSON =================
data = []
for i in range(len(title_all)):
    item = {
        "title": title_all[i] if i < len(title_all) else "",
        "link": links_all[i] if i < len(links_all) else "",
        "price_after": all_price1[i] if i < len(all_price1) else "",
        "price_before": all_price2[i] if i < len(all_price2) else "",
        "badge": product[i] if i < len(product) else "",
        "discount": discount_all[i] if i < len(discount_all) else "",
        "image_url": img_links[i] if i < len(img_links) else "",
        "image_file": f"images-cellphone/product_{i+1}.jpg" if i < len(img_links) else ""
    }
    data.append(item)

with open("cellphone_products.json", "w", encoding="utf-8") as f:
    json.dump(data, f, ensure_ascii=False, indent=4)

print(f"\n ƒê√£ l∆∞u {len(data)} s·∫£n ph·∫©m v√†o cellphone_products.json")
# ================= G·ª≠i v√†o Kafka =================
for idx, item in enumerate(data, start=1):
    producer.send("cellphone-topic", value=item)
    print(f"ƒê√£ g·ª≠i v√†o Kafka: {item}")


producer.flush()

